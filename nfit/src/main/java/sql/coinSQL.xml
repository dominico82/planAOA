<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nfit.member">
	<select id="getCoinInfo" resultType="nfit.member.model.MemberDTO">
		select * from 
			member_table
		where
			member_id = #{member_id}
	</select>
	<update id="setCoinInfo" parameterType="hashmap">
		update member_table set 
			member_coin = #{member_coin}	
		where 
			member_id = #{member_id}	
	</update>
	<insert id="setPayInfo" parameterType="nfit.coin.model.CoinDTO">
		insert into 
			pay_table
		values(
			pay_table_idx.nextval,
			#{member_idx},
			#{pay_method},
			#{pay_coin},
			#{pay_price},
			sysdate,
			#{pay_class}
		)
	</insert>
	<insert id="setCenterBooking" parameterType="hashmap">
		insert into
			pay_user
		values(
			pay_user_idx.nextval,
			#{member_id},
			#{co_idx},
			#{co_name},
			#{usemember_coin},
			#{use_date}
		)
	</insert>
	<update id="setUseMemberCoin" parameterType="hashmap">
		update member_table set 
			member_coin = #{member_coin}	
		where 
			member_id = #{member_id}
	</update>
	<select id="getCenterBooking" parameterType="hashmap" resultType="String">
		select use_date 
		from 
			pay_user
		where 
			co_name=#{co_name} and use_date=#{use_date}
	</select>	
	<delete id="bookingDel" parameterType="hashmap">
		delete pay_user
		where member_id=#{member_id} and co_idx=#{co_idx} and use_date=#{use_date}
	</delete>
	<update id="refundCoin" parameterType="hashmap">
		update member_table set 
			member_coin = #{member_coin}	
		where 
			member_id = #{member_id}
	</update>
</mapper>